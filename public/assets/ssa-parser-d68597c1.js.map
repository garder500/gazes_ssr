{"version":3,"mappings":"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","names":["FORMAT_START_RE","STYLE_START_RE","DIALOGUE_START_RE","FORMAT_SPLIT_RE","STYLE_FUNCTION_RE","NEW_LINE_RE","STYLES_SECTION_START_RE","EVENTS_SECTION_START_RE","SSAParser","constructor","__publicField","this","init","f","errors","d","__vitePreload","import","ParseErrorBuilder","parse","line","lineCount","O","test","N","styles","replace","split","S","e","_a","T","Q","dialogue","cue","U","a","_b","text","done","metadata","cues","j","regions","k","push","onCue","call","values","outlineX","marginV","outlineColor","bgColor","name","align","vertical","outlineY","borderStyle","transform","i","length","field","value","color","parseColor","parseInt","_outlineColor","parseFloat","alignment","R","buildTextShadow","filter","Boolean","join","P","fields","V","timestamp","o","Start","End","VTTCue","Style","voice","Name","marginLeft","MarginL","marginRight","MarginR","MarginV","slice","Object","keys","style","startTimeText","endTimeText","startTime","parseVTTTimestamp","endTime","q","r","_c","s","error","strict","cancel","onError","abgr","x","y","noOfShadows","Math","ceil","PI","textShadow","theta","cos","sin","createSSAParser"],"sources":["../../spa/node_modules/.pnpm/media-captions@0.0.18/node_modules/media-captions/dist/prod/ssa-parser.js"],"sourcesContent":["import { b as VTTCue, p as parseVTTTimestamp } from './index.js';\n\nconst FORMAT_START_RE = /^Format:[\\s\\t]*/, STYLE_START_RE = /^Style:[\\s\\t]*/, DIALOGUE_START_RE = /^Dialogue:[\\s\\t]*/, FORMAT_SPLIT_RE = /[\\s\\t]*,[\\s\\t]*/, STYLE_FUNCTION_RE = /\\{[^}]+\\}/g, NEW_LINE_RE = /\\\\N/g, STYLES_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Styles\\]$/, EVENTS_SECTION_START_RE = /^\\[(.*)[\\s\\t]?Events\\]$/;\nclass SSAParser {\n  f;\n  O = 0;\n  a = null;\n  j = [];\n  k = [];\n  N = null;\n  d;\n  P = {};\n  async init(init) {\n    this.f = init;\n    if (init.errors)\n      this.d = (await import('./errors.js')).ParseErrorBuilder;\n  }\n  parse(line, lineCount) {\n    if (this.O) {\n      switch (this.O) {\n        case 1:\n          if (line === \"\") {\n            this.O = 0;\n          } else if (STYLE_START_RE.test(line)) {\n            if (this.N) {\n              const styles = line.replace(STYLE_START_RE, \"\").split(FORMAT_SPLIT_RE);\n              this.S(styles);\n            } else {\n              this.e(this.d?.T(\"Style\", lineCount));\n            }\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 2;\n          }\n          break;\n        case 2:\n          if (line === \"\") {\n            this.Q();\n          } else if (DIALOGUE_START_RE.test(line)) {\n            this.Q();\n            if (this.N) {\n              const dialogue = line.replace(DIALOGUE_START_RE, \"\").split(FORMAT_SPLIT_RE), cue = this.U(dialogue, lineCount);\n              if (cue)\n                this.a = cue;\n            } else {\n              this.e(this.d?.T(\"Dialogue\", lineCount));\n            }\n          } else if (this.a) {\n            this.a.text += \"\\n\" + line.replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n          } else if (FORMAT_START_RE.test(line)) {\n            this.N = line.replace(FORMAT_START_RE, \"\").split(FORMAT_SPLIT_RE);\n          } else if (STYLES_SECTION_START_RE.test(line)) {\n            this.N = null;\n            this.O = 1;\n          } else if (EVENTS_SECTION_START_RE.test(line)) {\n            this.N = null;\n          }\n      }\n    } else if (line === \"\") ; else if (STYLES_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 1;\n    } else if (EVENTS_SECTION_START_RE.test(line)) {\n      this.N = null;\n      this.O = 2;\n    }\n  }\n  done() {\n    return {\n      metadata: {},\n      cues: this.j,\n      regions: [],\n      errors: this.k\n    };\n  }\n  Q() {\n    if (!this.a)\n      return;\n    this.j.push(this.a);\n    this.f.onCue?.(this.a);\n    this.a = null;\n  }\n  S(values) {\n    let name = \"Default\", styles = {}, outlineX, align = \"center\", vertical = \"bottom\", marginV, outlineY = 1.2, outlineColor, bgColor, borderStyle = 3, transform = [];\n    for (let i = 0; i < this.N.length; i++) {\n      const field = this.N[i], value = values[i];\n      switch (field) {\n        case \"Name\":\n          name = value;\n          break;\n        case \"Fontname\":\n          styles[\"font-family\"] = value;\n          break;\n        case \"Fontsize\":\n          styles[\"font-size\"] = `calc(${value} / var(--overlay-height))`;\n          break;\n        case \"PrimaryColour\":\n          const color = parseColor(value);\n          if (color)\n            styles[\"--cue-color\"] = color;\n          break;\n        case \"BorderStyle\":\n          borderStyle = parseInt(value, 10);\n          break;\n        case \"BackColour\":\n          bgColor = parseColor(value);\n          break;\n        case \"OutlineColour\":\n          const _outlineColor = parseColor(value);\n          if (_outlineColor)\n            outlineColor = _outlineColor;\n          break;\n        case \"Bold\":\n          if (parseInt(value))\n            styles[\"font-weight\"] = \"bold\";\n          break;\n        case \"Italic\":\n          if (parseInt(value))\n            styles[\"font-style\"] = \"italic\";\n          break;\n        case \"Underline\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"underline\";\n          break;\n        case \"StrikeOut\":\n          if (parseInt(value))\n            styles[\"text-decoration\"] = \"line-through\";\n          break;\n        case \"Spacing\":\n          styles[\"letter-spacing\"] = value + \"px\";\n          break;\n        case \"AlphaLevel\":\n          styles[\"opacity\"] = parseFloat(value);\n          break;\n        case \"ScaleX\":\n          transform.push(`scaleX(${parseFloat(value) / 100})`);\n          break;\n        case \"ScaleY\":\n          transform.push(`scaleY(${parseFloat(value) / 100})`);\n          break;\n        case \"Angle\":\n          transform.push(`rotate(${value}deg)`);\n          break;\n        case \"Shadow\":\n          outlineY = parseInt(value, 10) * 1.2;\n          break;\n        case \"MarginL\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-left\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginR\":\n          styles[\"--cue-width\"] = \"auto\";\n          styles[\"--cue-right\"] = parseFloat(value) + \"px\";\n          break;\n        case \"MarginV\":\n          marginV = parseFloat(value);\n          break;\n        case \"Outline\":\n          outlineX = parseInt(value, 10);\n          break;\n        case \"Alignment\":\n          const alignment = parseInt(value, 10);\n          if (alignment >= 4)\n            vertical = alignment >= 7 ? \"top\" : \"center\";\n          switch (alignment % 3) {\n            case 1:\n              align = \"start\";\n              break;\n            case 2:\n              align = \"center\";\n              break;\n            case 3:\n              align = \"end\";\n              break;\n          }\n      }\n    }\n    styles.R = vertical;\n    styles[\"--cue-white-space\"] = \"normal\";\n    styles[\"--cue-line-height\"] = \"normal\";\n    styles[\"--cue-text-align\"] = align;\n    if (vertical === \"center\") {\n      styles[`--cue-top`] = \"50%\";\n      transform.push(\"translateY(-50%)\");\n    } else {\n      styles[`--cue-${vertical}`] = (marginV || 0) + \"px\";\n    }\n    if (borderStyle === 1) {\n      styles[\"--cue-padding-y\"] = \"0\";\n    }\n    if (borderStyle === 1 || bgColor) {\n      styles[\"--cue-bg-color\"] = borderStyle === 1 ? \"none\" : bgColor;\n    }\n    if (borderStyle === 3 && outlineColor) {\n      styles[\"--cue-outline\"] = `${outlineX}px solid ${outlineColor}`;\n    }\n    if (borderStyle === 1 && typeof outlineX === \"number\") {\n      const color = bgColor ?? \"#000\";\n      styles[\"--cue-text-shadow\"] = [\n        outlineColor && buildTextShadow(outlineX * 1.2, outlineY * 1.2, outlineColor),\n        outlineColor ? buildTextShadow(outlineX * (outlineX / 2), outlineY * (outlineX / 2), color) : buildTextShadow(outlineX, outlineY, color)\n      ].filter(Boolean).join(\", \");\n    }\n    if (transform.length)\n      styles[\"--cue-transform\"] = transform.join(\" \");\n    this.P[name] = styles;\n  }\n  U(values, lineCount) {\n    const fields = this.V(values);\n    const timestamp = this.o(fields.Start, fields.End, lineCount);\n    if (!timestamp)\n      return;\n    const cue = new VTTCue(timestamp[0], timestamp[1], \"\"), styles = { ...this.P[fields.Style] || {} }, voice = fields.Name ? `<v ${fields.Name}>` : \"\";\n    const vertical = styles.R, marginLeft = fields.MarginL && parseFloat(fields.MarginL), marginRight = fields.MarginR && parseFloat(fields.MarginR), marginV = fields.MarginV && parseFloat(fields.MarginV);\n    if (marginLeft) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-left\"] = marginLeft + \"px\";\n    }\n    if (marginRight) {\n      styles[\"--cue-width\"] = \"auto\";\n      styles[\"--cue-right\"] = marginRight + \"px\";\n    }\n    if (marginV && vertical !== \"center\") {\n      styles[`--cue-${vertical}`] = marginV + \"px\";\n    }\n    cue.text = voice + values.slice(this.N.length - 1).join(\", \").replace(STYLE_FUNCTION_RE, \"\").replace(NEW_LINE_RE, \"\\n\");\n    delete styles.R;\n    if (Object.keys(styles).length)\n      cue.style = styles;\n    return cue;\n  }\n  V(values) {\n    const fields = {};\n    for (let i = 0; i < this.N.length; i++) {\n      fields[this.N[i]] = values[i];\n    }\n    return fields;\n  }\n  o(startTimeText, endTimeText, lineCount) {\n    const startTime = parseVTTTimestamp(startTimeText), endTime = parseVTTTimestamp(endTimeText);\n    if (startTime !== null && endTime !== null && endTime > startTime) {\n      return [startTime, endTime];\n    } else {\n      if (startTime === null) {\n        this.e(this.d?.q(startTimeText, lineCount));\n      }\n      if (endTime === null) {\n        this.e(this.d?.r(endTimeText, lineCount));\n      }\n      if (startTime != null && endTime !== null && endTime > startTime) {\n        this.e(this.d?.s(startTime, endTime, lineCount));\n      }\n    }\n  }\n  e(error) {\n    if (!error)\n      return;\n    this.k.push(error);\n    if (this.f.strict) {\n      this.f.cancel();\n      throw error;\n    } else {\n      this.f.onError?.(error);\n    }\n  }\n}\nfunction parseColor(color) {\n  const abgr = parseInt(color.replace(\"&H\", \"\"), 16);\n  if (abgr >= 0) {\n    const a = abgr >> 24 & 255 ^ 255;\n    const alpha = a / 255;\n    const b = abgr >> 16 & 255;\n    const g = abgr >> 8 & 255;\n    const r = abgr & 255;\n    return \"rgba(\" + [r, g, b, alpha].join(\",\") + \")\";\n  }\n  return null;\n}\nfunction buildTextShadow(x, y, color) {\n  const noOfShadows = Math.ceil(2 * Math.PI * x);\n  let textShadow = \"\";\n  for (let i = 0; i < noOfShadows; i++) {\n    const theta = 2 * Math.PI * i / noOfShadows;\n    textShadow += x * Math.cos(theta) + \"px \" + y * Math.sin(theta) + \"px 0 \" + color + (i == noOfShadows - 1 ? \"\" : \",\");\n  }\n  return textShadow;\n}\nfunction createSSAParser() {\n  return new SSAParser();\n}\n\nexport { SSAParser, createSSAParser as default };\n"],"file":"assets/ssa-parser-d68597c1.js"}